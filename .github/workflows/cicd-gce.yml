## Default Setting
name: Build and Deploy to GCE

on:
  push:
    branches: ["develop", "feature/cicd"]
  pull_request:
    branches: ["develop"]

# 환경 변수 $변수명으로 사용
#env:
#  PROJECT_NAME: "devdevdev"
#  BUCKET_NAME: "devdevdev-cicd-bucket"
#  CODE_DEPLOY_APP: "devdevdev-server"
#  CODE_DEPLOY_DEPLOYMENT_GROUP: "devdevdev-server-deployment-group"

jobs:
  build:
    name: Build and Deploy to GCE
    # 실행 환경 설정
    runs-on: ubuntu-latest

    # 차례대로 실행
    steps:
      # 작업에서 액세스할 수 있도록 $GITHUB_WORKSPACE에서 저장소를 체크아웃합니다.
      - uses: actions/checkout@v3

      ## open jdk 17 버전 환경 세팅
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: corretto

      ## Springboot 프로젝트 빌드
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build and Test with Gradle
        run: ./gradlew build test

      # Build
      - name: Docker hub login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_ID }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Docker image build ahd Docker Hub push
        run: |
          docker build -t ${{secrets.DOCKERHUB_ID}}/devdevdev-test .
          docker push ${{secrets.DOCKERHUB_ID}}/devdevdev-test

      # GCP
      - name: Deploy to Instance
        uses: appleboy/ssh-action@v1.0.0     #가장 최신 버젼 appleboy 사용
        with:
          host: ${{secrets.GCP_HOST}}
          username: ${{secrets.GCE_PROJECT}}
          key: ${{secrets.GCE_SA_KEY}}
          script: |
            sudo docker login -u ${{ secrets.DOCKERHUB_ID }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
            sudo docker pull ${{secrets.DOCKERHUB_ID}}/devdevdev-test
            sudo docker rm -f $(docker ps -qa)
            sudo docker-compose up -d
            sudo docker image prune -f

#      ## Slack에 cicd 결과 전송
#      - name: action-slack
#        uses: 8398a7/action-slack@v3
#        with:
#            status: ${{ job.status }}
#            author_name: 배포 결과를 알려드려요 # default: 8398a7@action-slack
#            fields: repo,message,commit,author,eventName,ref,took
#        env:
#           SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
#        if: always() # Pick up events even if the job fails or is canceled.